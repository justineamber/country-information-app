{"version":3,"sources":["static/norway.jpg","components/countrySingleComponent/countrySingleComponent.js","components/countryListComponent/countryListComponent.js","components/searchForCountry/searchForCountry.js","components/countryInformationDashboard/countryInformationDashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","countrySingleContainer","display","flexDirection","flexWrap","justifyContent","alignContent","alignItems","countryPropertySingle","color","fontFamily","fontSize","padding","countryFactsSingle","countryMapSingle","width","height","horizontalLine","marginTop","marginLeft","borderTop","background","paddingRight","CountrySingleComponent","props","classes","countryFlag","country","countryPopulation","countryCapital","countryRegion","countryCurrencies","countryLanguages","Box","className","src","alt","Typography","variant","theme","weatherList","backgroundColor","opacity","spacing","CountryListComponent","data","length","map","countryDetails","key","name","capital","population","flag","region","currencies","languages","nativeName","autoCompleteWrapper","inputBackgroundColor","SearchForCountry","countryName","onChange","inputValue","onInputChange","countryOption","Autocomplete","value","id","options","style","renderInput","params","TextField","label","weatherDashboardWrapper","backgroundImage","image","url","backgroundSize","backgroundRepeat","backgroundPosition","topBar","position","errorTextStyle","CountryInformationDashboard","useState","countryData","setCountryData","setCountryName","setInputValue","error","setError","Image","setImage","useEffect","fetch","then","response","json","eightCountryFacts","find","unsplash","Unsplash","accessKey","process","search","photos","toJson","results","imageUrl","urls","full","event","newValue","newInputValue","root","flexGrow","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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AAC5B,EAAA,EAAD,CAAKC,UAAWT,EAAQkD,yBACtB,kBAAC1C,EAAA,EAAD,CAAKC,UAAWT,EAAQyD,QACtB,kBAAC,EAAD,CACEf,MAAON,EACPC,SAAU,SAACmD,EAAOC,GAChBzB,EAAeyB,IAEjBnD,WAAYA,EACZC,cAAe,SAACiD,EAAOE,GACrBzB,EAAcyB,IAEhBlD,cAAeA,KAGlB0B,GAAS,uBAAGzD,UAAWT,EAAQ2D,gBAAiBO,GACjD,kBAAC,EAAD,CAAsB9C,KAAM0C,OAQ9BtB,EAAgB,CACpB,cACA,mBACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,YACA,UACA,YACA,UACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,WACA,gBACA,SACA,iCACA,2BACA,WACA,UACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,0BACA,UACA,QACA,qCACA,eACA,aACA,UACA,OACA,aACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,gBACA,OACA,UACA,SACA,gBACA,mBACA,QACA,SACA,UACA,UACA,QACA,SACA,YACA,UACA,OACA,YACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,mBACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,SACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,YACA,SACA,SACA,WACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,cACA,QACA,UACA,OACA,iBACA,0CACA,SACA,OACA,WACA,QACA,SACA,mBACA,WACA,cACA,SACA,WACA,QACA,aACA,UACA,qBACA,SACA,wBACA,cACA,4BACA,QACA,aACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,cACA,QACA,YACA,QACA,yBACA,YACA,SACA,cACA,uBACA,SACA,aACA,WACA,OACA,QACA,sBACA,UACA,SACA,SACA,UACA,uBACA,uDACA,2BACA,UACA,aACA,UACA,WACA,oBACA,iBACA,QACA,SACA,YCtSIlE,G,MAAYC,YAAW,CAC3BoH,KAAM,CACJC,SAAU,EACVrG,OAAQ,YAgBGsG,MAZf,WACE,IAAM7F,EAAU1B,IAEhB,OACE,yBAAKmC,UAAU,OACb,yBAAKA,UAAWT,EAAQ2F,MACtB,kBAAC,EAAD,SCNYG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlC,MAAK,SAAAmC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3C,GACL4C,QAAQ5C,MAAMA,EAAM6C,c","file":"static/js/main.2088e4a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/norway.8f8df061.jpg\";","import React from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  countrySingleContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"flex-start\"\n  },\n  countryPropertySingle: {\n    color: \"#eeeeea\",\n    fontFamily: \"Inconsolata, monospace\",\n    fontSize: \"1rem\",\n    padding: \"0.5rem\"\n  },\n  countryFactsSingle: {\n    color: \"#fff\",\n    fontSize: \"1.5rem\",\n    padding: \"0.5rem\"\n  },\n  countryMapSingle: {\n    padding: \"0.5rem\",\n    width: \"7rem\",\n    height: \"7rem\"\n  },\n  horizontalLine: {\n    marginTop: \"0.5px\",\n    marginLeft: \"0.5rem\",\n    height: \"0.5px\",\n    borderTop: 0,\n    background: \"#eaeaea\",\n    paddingRight: \"100%\"\n  }\n}));\n\nfunction CountrySingleComponent(props) {\n  const classes = useStyles();\n  const {\n    countryFlag,\n    country,\n    countryPopulation,\n    countryCapital,\n    countryRegion,\n    countryCurrencies,\n    countryLanguages\n  } = props;\n\n  return (\n    <Box className={classes.countrySingleContainer}>\n      <img\n        className={classes.countryMapSingle}\n        src={countryFlag}\n        alt=\"country flag\"\n      />\n\n      <Typography variant=\"h5\" className={classes.countryPropertySingle}>\n        Country\n      </Typography>\n      <Typography variant=\"h5\" className={classes.countryFactsSingle}>\n        {country}\n      </Typography>\n      <hr className={classes.horizontalLine} />\n\n      <Typography variant=\"h5\" className={classes.countryPropertySingle}>\n        Population\n      </Typography>\n      <Typography variant=\"h5\" className={classes.countryFactsSingle}>\n        {countryPopulation}\n      </Typography>\n      <hr className={classes.horizontalLine} />\n\n      <Typography variant=\"h5\" className={classes.countryPropertySingle}>\n        Capital city\n      </Typography>\n      <Typography variant=\"h5\" className={classes.countryFactsSingle}>\n        {countryCapital}\n      </Typography>\n      <hr className={classes.horizontalLine} />\n\n      <Typography variant=\"h5\" className={classes.countryPropertySingle}>\n        Region\n      </Typography>\n      <Typography variant=\"h5\" className={classes.countryFactsSingle}>\n        {countryRegion}\n      </Typography>\n      <hr className={classes.horizontalLine} />\n\n      <Typography variant=\"h5\" className={classes.countryPropertySingle}>\n        Currencies\n      </Typography>\n      <Typography variant=\"h5\" className={classes.countryFactsSingle}>\n        {countryCurrencies}\n      </Typography>\n      <hr className={classes.horizontalLine} />\n\n      <Typography variant=\"h5\" className={classes.countryPropertySingle}>\n        Languages\n      </Typography>\n      <Typography variant=\"h5\" className={classes.countryFactsSingle}>\n        {countryLanguages}\n      </Typography>\n      <hr className={classes.horizontalLine} />\n    </Box>\n  );\n}\n\nexport default CountrySingleComponent;\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport CountrySingleComponent from \"../countrySingleComponent/countrySingleComponent\";\n\nconst useStyles = makeStyles(theme => ({\n  weatherList: {\n    backgroundColor: \"#112d4e\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: \"1.5rem 0\",\n    opacity: \"0.8\",\n    marginTop: theme.spacing(4),\n    width: \"100%\"\n  }\n}));\n\nfunction CountryListComponent(props) {\n  const classes = useStyles();\n  const { data } = props;\n\n  if (data && data.length === 0) return null;\n\n  return (\n    <Box className={classes.weatherList}>\n      {[data].map(countryDetails => {\n        return (\n          <CountrySingleComponent\n            key={countryDetails.name}\n            country={countryDetails.name}\n            countryCapital={countryDetails.capital}\n            countryPopulation={countryDetails.population}\n            countryFlag={countryDetails.flag}\n            countryRegion={countryDetails.region}\n            countryCurrencies={countryDetails.currencies[0].name}\n            countryLanguages={countryDetails.languages[0].nativeName}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n\nexport default CountryListComponent;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = makeStyles(() => ({\n  autoCompleteWrapper: {\n    marginTop: \"1rem\",\n    marginLeft: \"1rem\"\n  },\n  inputBackgroundColor: {\n    backgroundColor: \"#fff\"\n  }\n}));\n\nfunction SearchForCountry(props) {\n  const {\n    countryName,\n    onChange,\n    inputValue,\n    onInputChange,\n    countryOption\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.autoCompleteWrapper}>\n        <Autocomplete\n          value={countryName}\n          onChange={onChange}\n          inputValue={inputValue}\n          onInputChange={onInputChange}\n          id=\"Search city\"\n          options={countryOption}\n          style={{ width: 200 }}\n          renderInput={params => (\n            <TextField\n              {...params}\n              label=\"Select a country\"\n              variant=\"filled\"\n              className={classes.inputBackgroundColor}\n            />\n          )}\n        />\n      </Box>\n    </>\n  );\n}\n\nexport default SearchForCountry;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport CountryListComponent from \"../countryListComponent/countryListComponent\";\nimport SearchForCountry from \"../searchForCountry/searchForCountry\";\nimport Image from \"../../../src/static/norway.jpg\";\nimport Unsplash, { toJson } from \"unsplash-js\";\n\nconst useStyles = makeStyles(() => ({\n  weatherDashboardWrapper: {\n    width: \"100%\",\n    height: \"170%\",\n    backgroundImage: image => `url(${image.url})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center center fixed\"\n  },\n  topBar: {\n    display: \"flex\",\n    position: \"relative\"\n  },\n  errorTextStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: \"#e84545\",\n    fontSize: \"1.5rem\"\n  }\n}));\n\nfunction CountryInformationDashboard({ props }) {\n  const [countryData, setCountryData] = useState([]);\n  const [countryName, setCountryName] = useState(countryOption[132]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [image, setImage] = useState({\n    alt: \"Norwegian flag\",\n    url: Image\n  });\n\n  const classes = useStyles(image);\n\n  useEffect(() => {\n    fetch(\n      `https://restcountries.eu/rest/v2/all?fields=name;capital;currencies;population;flag;languages;region`\n    )\n      .then(response => response.json())\n      .then(response => {\n        if (!response) return;\n\n        const eightCountryFacts = response.find(\n          ({ name }) => name === `${countryName}`\n        );\n        if (!countryName) {\n          return setError(\"Please select a valid country\");\n        } else {\n          setCountryData(eightCountryFacts);\n          return setError(\"\");\n        }\n      });\n\n    const unsplash = new Unsplash({\n      accessKey: `${process.env.REACT_APP_UNSPLASH_API_KEY}`\n    });\n\n    if (countryName) {\n      unsplash.search\n        .photos(countryName, 1, 1)\n        .then(toJson)\n        .then(json => {\n          const results = json.results;\n          const imageUrl = results.length > 0 ? results[0].urls.full : Image;\n\n          setImage({\n            alt: countryName,\n            url: imageUrl\n          });\n        });\n    }\n  }, [countryName]);\n\n  return (\n    <>\n      <Box className={classes.weatherDashboardWrapper}>\n        <Box className={classes.topBar}>\n          <SearchForCountry\n            value={countryName}\n            onChange={(event, newValue) => {\n              setCountryName(newValue);\n            }}\n            inputValue={inputValue}\n            onInputChange={(event, newInputValue) => {\n              setInputValue(newInputValue);\n            }}\n            countryOption={countryOption}\n          />\n        </Box>\n        {error && <p className={classes.errorTextStyle}>{error}</p>}\n        <CountryListComponent data={countryData} />\n      </Box>\n    </>\n  );\n}\n\nexport default CountryInformationDashboard;\n\nconst countryOption = [\n  \"Afghanistan\",\n  \"Åland Islands\",\n  \"Albania\",\n  \"Algeria\",\n  \"American Samoa\",\n  \"Andorra\",\n  \"Angola\",\n  \"Anguilla\",\n  \"Antarctica\",\n  \"Argentina\",\n  \"Armenia\",\n  \"Australia\",\n  \"Austria\",\n  \"Bahamas\",\n  \"Bahrain\",\n  \"Bangladesh\",\n  \"Barbados\",\n  \"Belarus\",\n  \"Belgium\",\n  \"Belize\",\n  \"Benin\",\n  \"Bermuda\",\n  \"Bhutan\",\n  \"Botswana\",\n  \"Bouvet Island\",\n  \"Brazil\",\n  \"British Indian Ocean Territory\",\n  \"Virgin Islands (British)\",\n  \"Bulgaria\",\n  \"Burundi\",\n  \"Cambodia\",\n  \"Cameroon\",\n  \"Canada\",\n  \"Cabo Verde\",\n  \"Cayman Islands\",\n  \"Central African Republic\",\n  \"Chad\",\n  \"Chile\",\n  \"China\",\n  \"Cocos (Keeling) Islands\",\n  \"Comoros\",\n  \"Congo\",\n  \"Congo (Democratic Republic of the)\",\n  \"Cook Islands\",\n  \"Costa Rica\",\n  \"Croatia\",\n  \"Cuba\",\n  \"Curaçao\",\n  \"Cyprus\",\n  \"Czech Republic\",\n  \"Denmark\",\n  \"Djibouti\",\n  \"Dominica\",\n  \"Dominican Republic\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"El Salvador\",\n  \"Equatorial Guinea\",\n  \"Eritrea\",\n  \"Estonia\",\n  \"Ethiopia\",\n  \"Faroe Islands\",\n  \"Fiji\",\n  \"Finland\",\n  \"France\",\n  \"French Guiana\",\n  \"French Polynesia\",\n  \"Gabon\",\n  \"Gambia\",\n  \"Georgia\",\n  \"Germany\",\n  \"Ghana\",\n  \"Greece\",\n  \"Greenland\",\n  \"Grenada\",\n  \"Guam\",\n  \"Guatemala\",\n  \"Guinea\",\n  \"Haiti\",\n  \"Honduras\",\n  \"Hong Kong\",\n  \"Hungary\",\n  \"Iceland\",\n  \"India\",\n  \"Indonesia\",\n  \"Côte d'Ivoire\",\n  \"Iraq\",\n  \"Ireland\",\n  \"Isle of Man\",\n  \"Israel\",\n  \"Italy\",\n  \"Jamaica\",\n  \"Japan\",\n  \"Jersey\",\n  \"Jordan\",\n  \"Kazakhstan\",\n  \"Kenya\",\n  \"Kiribati\",\n  \"Kuwait\",\n  \"Latvia\",\n  \"Lebanon\",\n  \"Lesotho\",\n  \"Liberia\",\n  \"Libya\",\n  \"Liechtenstein\",\n  \"Lithuania\",\n  \"Luxembourg\",\n  \"Madagascar\",\n  \"Malawi\",\n  \"Malaysia\",\n  \"Maldives\",\n  \"Mali\",\n  \"Malta\",\n  \"Marshall Islands\",\n  \"Mauritius\",\n  \"Mexico\",\n  \"Monaco\",\n  \"Mongolia\",\n  \"Montenegro\",\n  \"Morocco\",\n  \"Mozambique\",\n  \"Myanmar\",\n  \"Namibia\",\n  \"Nauru\",\n  \"Nepal\",\n  \"Netherlands\",\n  \"New Zealand\",\n  \"Niger\",\n  \"Nigeria\",\n  \"Niue\",\n  \"Norfolk Island\",\n  \"Korea (Democratic People's Republic of)\",\n  \"Norway\",\n  \"Oman\",\n  \"Pakistan\",\n  \"Palau\",\n  \"Panama\",\n  \"Papua New Guinea\",\n  \"Paraguay\",\n  \"Philippines\",\n  \"Poland\",\n  \"Portugal\",\n  \"Qatar\",\n  \"Réunion\",\n  \"Romania\",\n  \"Russian Federation\",\n  \"Rwanda\",\n  \"Saint Kitts and Nevis\",\n  \"Saint Lucia\",\n  \"Saint Pierre and Miquelon\",\n  \"Samoa\",\n  \"San Marino\",\n  \"Saudi Arabia\",\n  \"Senegal\",\n  \"Serbia\",\n  \"Seychelles\",\n  \"Sierra Leone\",\n  \"Singapore\",\n  \"Slovakia\",\n  \"Slovenia\",\n  \"Solomon Islands\",\n  \"Somalia\",\n  \"South Africa\",\n  \"South Sudan\",\n  \"Spain\",\n  \"Sri Lanka\",\n  \"Sudan\",\n  \"Svalbard and Jan Mayen\",\n  \"Swaziland\",\n  \"Sweden\",\n  \"Switzerland\",\n  \"Syrian Arab Republic\",\n  \"Taiwan\",\n  \"Tajikistan\",\n  \"Thailand\",\n  \"Togo\",\n  \"Tonga\",\n  \"Trinidad and Tobago\",\n  \"Tunisia\",\n  \"Turkey\",\n  \"Uganda\",\n  \"Ukraine\",\n  \"United Arab Emirates\",\n  \"United Kingdom of Great Britain and Northern Ireland\",\n  \"United States of America\",\n  \"Uruguay\",\n  \"Uzbekistan\",\n  \"Vanuatu\",\n  \"Viet Nam\",\n  \"Wallis and Futuna\",\n  \"Western Sahara\",\n  \"Yemen\",\n  \"Zambia\",\n  \"Zimbabwe\"\n];\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CountryInformationDashboard from \"./components/countryInformationDashboard/countryInformationDashboard\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\"\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <div className={classes.root}>\n        <CountryInformationDashboard />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}